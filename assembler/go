#!/bin/bash
set -e

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"
LC3AS_DIR="${SCRIPT_DIR}/../vendor/lc3tools"
LC3AS="${LC3AS_DIR}/lc3as"

cd "$SCRIPT_DIR"

function error {
    echo -e >&2 "\033[31m${1}\033[0m";
    exit 1;
}

function notice {
    local msg="$1"
    shift
    echo -e "$@" >&2 "\033[33m${msg}\033[0m" ;
}

function ensure_env {
    command -v git >/dev/null 2>&1 || error "Please install git"
}

function cmd_test {
    cargo test
    wasm-pack test --node
    echo "✓ Done"
}

function cmd_usage {
    echo "Usage";
}

function run-single-testcase {
    local result
    local exitcode
    local bin="../target/debug/lc3as"

    local file="$1"
    shift
    local additionalArguments="$@"

    notice "Checking '$file' " -n

    set +e
    result="$("${bin}" "$file" 2>&1; exit $?)"
    exitcode=$?
    set -e

    if (( $exitcode == 0 )); then
        echo "✅"
    else
        echo "❌"
    fi
}

#function cmd_testcases {
#    files="$(find testcases/simple -name '*.asm')"
#    cargo build
#    for file in ${files}; do
#      run-single-testcase "${file}"
#    done
#}

function task_assemble_tests {
    for asm_file in $SCRIPT_DIR/testcases/simple/*.asm; do
        ${LC3AS} "${asm_file}" 2>&1 1>/dev/null || error "Failed to assemble $(basename ${asm_file})!"
    done
}

function cmd_testcases {
    #set -x
    cd $SCRIPT_DIR
    cargo build
    git clean -fdx -e '*.asm' -- tests/ 2>&1 1>/dev/null

    files=$SCRIPT_DIR/testcases/simple/*.asm
    if [ ! -z "$1" ]; then
      files="$1"
    fi

    task_assemble_tests
    for asm_file in $files; do
      $SCRIPT_DIR/../target/debug/lc3as $asm_file $SCRIPT_DIR/testcases/simple/$(basename "$asm_file").out || error "Couldn't compile $asm_file"
    done

    echo ""
    notice "Starting test-run"

    for asm_file in $files; do
      local our_file="${asm_file}.out"
      local their_file="$SCRIPT_DIR/testcases/simple/$(basename $asm_file .asm).obj"

      local ours="$(md5 -q $our_file)"
      local theirs="$(md5 -q $their_file)"

      if [ "$ours" != "$theirs" ]; then
        echo "Results differed for $asm_file"
        echo "Our file: $our_file"
        binwalk --hexdump "$our_file" "$their_file"
      else
        echo "✓ ${asm_file}"
      fi
    done
}

ensure_env

command=""
if (( $# > 0 )); then
    command="${1}"
    shift
fi

case "${command}" in
    test) cmd_test "$@" ;;
    testcases) cmd_testcases "$@" ;;
    *) cmd_usage
esac
