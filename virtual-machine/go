#!/bin/bash
set -e

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"
LC3AS_DIR="${SCRIPT_DIR}/../vendor/lc3tools"
LC3AS="${LC3AS_DIR}/lc3as"

function error {
    echo -e >&2 "\033[31m${1}\033[0m";
    exit 1;
}

function notice {
    echo -e >&2 "\033[33m${1}\033[0m";
}

function ensure_env {
    git submodule update --init
    command -v make >/dev/null 2>&1 || error "Please install make (needed to build lc3tools)"
    command -v rustc >/dev/null 2>&1 || error "Please install Rust >= 1.33"
    command -v cargo >/dev/null 2>&1 || error "Please install Cargo (Rust's package manager)"
}

function ensure_lc3_tools {
    if [ ! -f "${LC3AS}" ]; then
        notice "LC3 assembler not found, trying to build"
        (cd "${LC3AS_DIR}" && ./configure && make)
    fi
}

function cmd_assemble_tests {
    for asm_file in $(find $SCRIPT_DIR/testcases -name "*.asm"); do
        ${LC3AS} "${asm_file}" 2>&1 1>/dev/null || error "Failed to assemble $(basename ${asm_file})!"
    done
}

function cmd_test {
    cmd_assemble_tests
    RUST_LOG="" cargo test "$@"
}

function cmd_os {
  cmd_assemble_tests
  cargo run -- --program tests/os.obj --entry-point 0x200
}

function cmd_usage {
    echo "
./go [cmd]

  test              Run all tests
  assemble-tests    Assemble all testcases (this does not run the tests)
  os                Runs the 'LC3 OS' test case in interactive mode

    ";
}

ensure_env
ensure_lc3_tools

command=""
if (( $# > 0 )); then
    command="${1}"
    shift
fi

case "${command}" in
    test) cmd_test "$@" ;;
    assemble-tests) cmd_assemble_tests "$@" ;;
    os)  cmd_os "$@" ;;
    *) cmd_usage
esac
